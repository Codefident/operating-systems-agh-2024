
main:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 92 2f 00 00    	push   0x2f92(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 93 2f 00 00 	bnd jmp *0x2f93(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 9d 2f 00 00 	bnd jmp *0x2f9d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001060 <__stack_chk_fail@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 5d 2f 00 00 	bnd jmp *0x2f5d(%rip)        # 3fc8 <__stack_chk_fail@GLIBC_2.4>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001070 <printf@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 55 2f 00 00 	bnd jmp *0x2f55(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	45 31 c0             	xor    %r8d,%r8d
    1096:	31 c9                	xor    %ecx,%ecx
    1098:	48 8d 3d 3e 01 00 00 	lea    0x13e(%rip),%rdi        # 11dd <main>
    109f:	ff 15 33 2f 00 00    	call   *0x2f33(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10a5:	f4                   	hlt    
    10a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10ad:	00 00 00 

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4010 <__TMC_END__>
    10b7:	48 8d 05 52 2f 00 00 	lea    0x2f52(%rip),%rax        # 4010 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 16 2f 00 00 	mov    0x2f16(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmp    *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	ret    
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 29 2f 00 00 	lea    0x2f29(%rip),%rdi        # 4010 <__TMC_END__>
    10e7:	48 8d 35 22 2f 00 00 	lea    0x2f22(%rip),%rsi        # 4010 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmp    *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	80 3d e5 2e 00 00 00 	cmpb   $0x0,0x2ee5(%rip)        # 4010 <__TMC_END__>
    112b:	75 2b                	jne    1158 <__do_global_dtors_aux+0x38>
    112d:	55                   	push   %rbp
    112e:	48 83 3d c2 2e 00 00 	cmpq   $0x0,0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0c                	je     1147 <__do_global_dtors_aux+0x27>
    113b:	48 8b 3d c6 2e 00 00 	mov    0x2ec6(%rip),%rdi        # 4008 <__dso_handle>
    1142:	e8 09 ff ff ff       	call   1050 <__cxa_finalize@plt>
    1147:	e8 64 ff ff ff       	call   10b0 <deregister_tm_clones>
    114c:	c6 05 bd 2e 00 00 01 	movb   $0x1,0x2ebd(%rip)        # 4010 <__TMC_END__>
    1153:	5d                   	pop    %rbp
    1154:	c3                   	ret    
    1155:	0f 1f 00             	nopl   (%rax)
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	e9 77 ff ff ff       	jmp    10e0 <register_tm_clones>

0000000000001169 <handlePrint>:
    1169:	f3 0f 1e fa          	endbr64 
    116d:	55                   	push   %rbp
    116e:	48 89 e5             	mov    %rsp,%rbp
    1171:	48 83 ec 10          	sub    $0x10,%rsp
    1175:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1178:	89 75 f8             	mov    %esi,-0x8(%rbp)
    117b:	83 7d f8 fe          	cmpl   $0xfffffffe,-0x8(%rbp)
    117f:	74 21                	je     11a2 <handlePrint+0x39>
    1181:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%rbp)
    1185:	75 36                	jne    11bd <handlePrint+0x54>
    1187:	8b 45 fc             	mov    -0x4(%rbp),%eax
    118a:	89 c6                	mov    %eax,%esi
    118c:	48 8d 05 75 0e 00 00 	lea    0xe75(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    1193:	48 89 c7             	mov    %rax,%rdi
    1196:	b8 00 00 00 00       	mov    $0x0,%eax
    119b:	e8 d0 fe ff ff       	call   1070 <printf@plt>
    11a0:	eb 38                	jmp    11da <handlePrint+0x71>
    11a2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11a5:	89 c6                	mov    %eax,%esi
    11a7:	48 8d 05 82 0e 00 00 	lea    0xe82(%rip),%rax        # 2030 <_IO_stdin_used+0x30>
    11ae:	48 89 c7             	mov    %rax,%rdi
    11b1:	b8 00 00 00 00       	mov    $0x0,%eax
    11b6:	e8 b5 fe ff ff       	call   1070 <printf@plt>
    11bb:	eb 1d                	jmp    11da <handlePrint+0x71>
    11bd:	8b 55 f8             	mov    -0x8(%rbp),%edx
    11c0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11c3:	89 c6                	mov    %eax,%esi
    11c5:	48 8d 05 89 0e 00 00 	lea    0xe89(%rip),%rax        # 2055 <_IO_stdin_used+0x55>
    11cc:	48 89 c7             	mov    %rax,%rdi
    11cf:	b8 00 00 00 00       	mov    $0x0,%eax
    11d4:	e8 97 fe ff ff       	call   1070 <printf@plt>
    11d9:	90                   	nop
    11da:	90                   	nop
    11db:	c9                   	leave  
    11dc:	c3                   	ret    

00000000000011dd <main>:
    11dd:	f3 0f 1e fa          	endbr64 
    11e1:	55                   	push   %rbp
    11e2:	48 89 e5             	mov    %rsp,%rbp
    11e5:	48 83 ec 40          	sub    $0x40,%rsp
    11e9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11f0:	00 00 
    11f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11f6:	31 c0                	xor    %eax,%eax
    11f8:	c7 45 c8 64 00 00 00 	movl   $0x64,-0x38(%rbp)
    11ff:	c7 45 d0 05 00 00 00 	movl   $0x5,-0x30(%rbp)
    1206:	c7 45 d4 0b 00 00 00 	movl   $0xb,-0x2c(%rbp)
    120d:	c7 45 d8 64 00 00 00 	movl   $0x64,-0x28(%rbp)
    1214:	c7 45 dc 65 00 00 00 	movl   $0x65,-0x24(%rbp)
    121b:	c7 45 e0 4d 00 00 00 	movl   $0x4d,-0x20(%rbp)
    1222:	c7 45 e4 02 00 00 00 	movl   $0x2,-0x1c(%rbp)
    1229:	c7 45 e8 08 00 00 00 	movl   $0x8,-0x18(%rbp)
    1230:	c7 45 ec cf 07 00 00 	movl   $0x7cf,-0x14(%rbp)
    1237:	c7 45 f0 d5 07 00 00 	movl   $0x7d5,-0x10(%rbp)
    123e:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    1245:	c7 45 cc 0a 00 00 00 	movl   $0xa,-0x34(%rbp)
    124c:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    1253:	eb 2d                	jmp    1282 <main+0xa5>
    1255:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1258:	48 98                	cltq   
    125a:	8b 44 85 d0          	mov    -0x30(%rbp,%rax,4),%eax
    125e:	8b 55 c8             	mov    -0x38(%rbp),%edx
    1261:	89 d6                	mov    %edx,%esi
    1263:	89 c7                	mov    %eax,%edi
    1265:	e8 65 00 00 00       	call   12cf <test_collatz_convergence>
    126a:	89 c2                	mov    %eax,%edx
    126c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    126f:	48 98                	cltq   
    1271:	8b 44 85 d0          	mov    -0x30(%rbp,%rax,4),%eax
    1275:	89 d6                	mov    %edx,%esi
    1277:	89 c7                	mov    %eax,%edi
    1279:	e8 eb fe ff ff       	call   1169 <handlePrint>
    127e:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
    1282:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1285:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    1288:	7c cb                	jl     1255 <main+0x78>
    128a:	b8 00 00 00 00       	mov    $0x0,%eax
    128f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1293:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    129a:	00 00 
    129c:	74 05                	je     12a3 <main+0xc6>
    129e:	e8 bd fd ff ff       	call   1060 <__stack_chk_fail@plt>
    12a3:	c9                   	leave  
    12a4:	c3                   	ret    

00000000000012a5 <collatz_conjecture>:
    12a5:	f3 0f 1e fa          	endbr64 
    12a9:	55                   	push   %rbp
    12aa:	48 89 e5             	mov    %rsp,%rbp
    12ad:	89 7d fc             	mov    %edi,-0x4(%rbp)
    12b0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    12b3:	83 e0 01             	and    $0x1,%eax
    12b6:	85 c0                	test   %eax,%eax
    12b8:	75 07                	jne    12c1 <collatz_conjecture+0x1c>
    12ba:	8b 45 fc             	mov    -0x4(%rbp),%eax
    12bd:	d1 e8                	shr    %eax
    12bf:	eb 0c                	jmp    12cd <collatz_conjecture+0x28>
    12c1:	8b 55 fc             	mov    -0x4(%rbp),%edx
    12c4:	89 d0                	mov    %edx,%eax
    12c6:	01 c0                	add    %eax,%eax
    12c8:	01 d0                	add    %edx,%eax
    12ca:	83 c0 01             	add    $0x1,%eax
    12cd:	5d                   	pop    %rbp
    12ce:	c3                   	ret    

00000000000012cf <test_collatz_convergence>:
    12cf:	f3 0f 1e fa          	endbr64 
    12d3:	55                   	push   %rbp
    12d4:	48 89 e5             	mov    %rsp,%rbp
    12d7:	48 83 ec 18          	sub    $0x18,%rsp
    12db:	89 7d ec             	mov    %edi,-0x14(%rbp)
    12de:	89 75 e8             	mov    %esi,-0x18(%rbp)
    12e1:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
    12e5:	77 07                	ja     12ee <test_collatz_convergence+0x1f>
    12e7:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    12ec:	eb 3b                	jmp    1329 <test_collatz_convergence+0x5a>
    12ee:	8b 45 ec             	mov    -0x14(%rbp),%eax
    12f1:	89 45 f8             	mov    %eax,-0x8(%rbp)
    12f4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12fb:	eb 1f                	jmp    131c <test_collatz_convergence+0x4d>
    12fd:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1300:	89 c7                	mov    %eax,%edi
    1302:	e8 9e ff ff ff       	call   12a5 <collatz_conjecture>
    1307:	89 45 f8             	mov    %eax,-0x8(%rbp)
    130a:	83 7d f8 01          	cmpl   $0x1,-0x8(%rbp)
    130e:	75 08                	jne    1318 <test_collatz_convergence+0x49>
    1310:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1313:	83 c0 01             	add    $0x1,%eax
    1316:	eb 11                	jmp    1329 <test_collatz_convergence+0x5a>
    1318:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    131c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    131f:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    1322:	7c d9                	jl     12fd <test_collatz_convergence+0x2e>
    1324:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1329:	c9                   	leave  
    132a:	c3                   	ret    

Disassembly of section .fini:

000000000000132c <_fini>:
    132c:	f3 0f 1e fa          	endbr64 
    1330:	48 83 ec 08          	sub    $0x8,%rsp
    1334:	48 83 c4 08          	add    $0x8,%rsp
    1338:	c3                   	ret    
